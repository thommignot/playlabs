stages:
- build
- test
- update
- release

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  RELEASE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  PUBLIC_RELEASE_TAG: yourlabs/playlabs:$CI_COMMIT_REF_NAME
  PUBLIC_IMAGE_TAG: yourlabs/playlabs:$CI_COMMIT_SHA
  ANSIBLE_FORCE_COLOR: 'true'
  USER: gitlab

build:
  stage: build
  image: docker:stable
  services: ['docker:dind']
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
  - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
  - docker pull $CI_REGISTRY_IMAGE:master || true
  - docker build --cache-from $CI_REGISTRY_IMAGE:master -t $IMAGE_TAG .
  - docker push $IMAGE_TAG
  - docker logout $CI_REGISTRY
  - echo -n $DOCKER_PASS | docker login --username "$DOCKER_USER" --password-stdin
  - docker tag $IMAGE_TAG $PUBLIC_IMAGE_TAG
  - docker push $PUBLIC_IMAGE_TAG
  after_script:
  - docker logout

#buildah version, better because ci is not privileged, but where is caching
#support ? Not to mention the random failures ...
#  image: tomkukral/buildah
#  before_script:
#  - podman login --username gitlab-ci-token --password $CI_JOB_TOKEN $CI_REGISTRY
#  script:
#  - buildah bud -t $IMAGE_TAG .
#  - buildah push $IMAGE_TAG docker://$IMAGE_TAG
#  after_script:
#  - podman logout $CI_REGISTRY

py-qa:
  stage: build
  image: yourlabs/python
  script: flake8 --show-source --max-complexity=11 --ignore=E305,W503 playlabs

py-test:
  stage: test
  image: $IMAGE_TAG
  script: cd playlabs/tests/ && py.test --cov playlabs

vagrant-nginx-proxy:
  stage: build
  tags: [shell]
  before_script:
  - test -f $HOME/.ssh/id_rsa || ssh-keygen -f $HOME/.ssh/id_rsa
  - vagrant up
  - vagrant ssh-config > ${CI_JOB_ID}-ssh-config
  - virtualenv -p python3 ${CI_JOB_ID}-env
  - ${CI_JOB_ID}-env/bin/pip install -e .
  script:
  - ${CI_JOB_ID}-env/bin/playlabs deploy image=yourlabs/crudlfap @default --ssh-common-args="-F ${CI_JOB_ID}-ssh-config"
  - ${CI_JOB_ID}-env/bin/playlabs install netdata @default
  after_script:
  - vagrant destroy -f

ubuntu-init:
  stage: test
  image: $IMAGE_TAG
  services:
  - name: rastasheep/ubuntu-sshd
    alias: target
    command:
    - /usr/sbin/sshd
    - -e
    - -o
    - LogLevel=DEBUG
    - -D
  before_script: [ssh-keygen -f $HOME/.ssh/id_rsa]
  script:
  - playlabs init root:root@target sshd_handler=reloaded

ubuntu-deploy:
  stage: test
  image: $IMAGE_TAG
  except:
  - /^\d+\./
  script:
  - playlabs scaffold inventory
  - playlabs deploy hacker@ci.yourlabs.io prefix=ci instance=$CI_COMMIT_REF_NAME image=yourlabs/crudlfap:master dns=${CI_COMMIT_REF_NAME}.playlabs.ci.yourlabs.io

ubuntu-update:
  stage: update
  image: $IMAGE_TAG
  except:
  - /^\d+\./
  script:
  - playlabs scaffold inventory
  - playlabs deploy deploy@ci.yourlabs.io prefix=ci instance=$CI_COMMIT_REF_NAME image=yourlabs/crudlfap:master dns=${CI_COMMIT_REF_NAME}.playlabs.ci.yourlabs.io --tags=update

pypi:
  stage: release
  image: yourlabs/python
  script: pypi-release

docker-push:
  stage: release
  image: docker:stable
  services: ['docker:dind']
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
  - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  - docker pull $IMAGE_TAG
  - docker tag $IMAGE_TAG $RELEASE_TAG
  - docker push $RELEASE_TAG
  - docker logout
  - echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
  - docker tag $IMAGE_TAG $PUBLIC_RELEASE_TAG
  - docker push $PUBLIC_RELEASE_TAG
  - docker logout
