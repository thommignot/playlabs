stages:
- build
- test
- release

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  ANSIBLE_FORCE_COLOR: 'true'
  USER: gitlab

build:
  stage: build
  image: docker:stable
  services: ['docker:dind']
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
  - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
  - docker pull $CI_REGISTRY_IMAGE:master || true
  - docker build --cache-from $CI_REGISTRY_IMAGE:master -t $IMAGE_TAG .
  - docker push $IMAGE_TAG
  after_script:
  - docker logout
#buildah version, better because ci is not privileged, but where is caching
#support ? Not to mention the random failures ...
#  image: tomkukral/buildah
#  before_script:
#  - podman login --username gitlab-ci-token --password $CI_JOB_TOKEN $CI_REGISTRY
#  script:
#  - buildah bud -t $IMAGE_TAG .
#  - buildah push $IMAGE_TAG docker://$IMAGE_TAG
#  after_script:
#  - podman logout $CI_REGISTRY

py-qa:
  stage: build
  image: yourlabs/python
  script: flake8 --show-source --max-complexity=8 --ignore=E305 playlabs

py-test:
  stage: test
  image: $IMAGE_TAG
  script: py.test --cov playlabs

ubuntu-init:
  services:
  - name: rastasheep/ubuntu-sshd
    alias: target
    command:
    - /usr/sbin/sshd
    - -e
    - -o
    - LogLevel=DEBUG
    - -D

  stage: test
  image: yourlabs/playlabs:master
  before_script: [ssh-keygen -f $HOME/.ssh/id_rsa]
  script:
  - playlabs init root:root@target sshd_handler=reloaded

ubuntu-deploy:
  stage: test
  image: yourlabs/playlabs:master
  script:
  - playlabs deploy @ci.yourlabs.io prefix=ci instance=$CI_COMMIT_REF_NAME

pypi:
  stage: release
  image: yourlabs/python
  only: [tags]
  script: |
    set -eux
    export PLAYLABS_VERSION="$CI_COMMIT_REF_NAME"
    pip3 install twine
    python3 setup.py sdist
    cat <<EOF > ~/.pypirc
    [pypi]
    username=yourlabs
    password=$PYPI_PASSWORD
    EOF
    twine upload dist/*
