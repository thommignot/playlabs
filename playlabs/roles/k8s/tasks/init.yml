---

- name: Reset Kubernetes component
  shell: kubeadm reset --force
  register: reset_cluster

- name: Configure kubelet --fail-on-swap
  when: k8s_swap
  copy:
    content: KUBELET_EXTRA_ARGS=--fail-swap-on=false
    dest: /etc/default/kubelet

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: |
    kubeadm init --service-cidr {{ k8s_service_cidr }} \
                 --kubernetes-version {{ k8s_version }} \
                 --pod-network-cidr {{ k8s_pod_network_cidr }} \
                 --token {{ k8s_token }} \
                 --apiserver-advertise-address {{ k8s_master_ip }} \
                 {% if k8s_swap %}--ignore-preflight-errors Swap{% endif %}
  register: init_cluster

- name: Create Kubernetes config directory
  file:
    path: .kube/
    state: directory

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: '{{ k8s_admin_config }}'
    dest: '.kube/config'
    owner: '{{ ansible_user|default(ansible_user_id) }}'
    group: '{{ ansible_user|default(ansible_user_id) }}'
    mode: 0755
    remote_src: true

- name: Deploy kubernetes dashboard into cluster
  when: init_cluster is succeeded and k8s_dashboard
  command: |
    kubectl --kubeconfig={{ k8s_admin_config }} \
        apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended/kubernetes-dashboard.yaml
  register: create_result
  until: create_result.rc == 0
  retries: 5
  delay: 2
  ignore_errors: true
  tags: dashboard

- name: Install your user
  include: user.yml
  vars:
    user:
      name: '{{ lookup("env", "USER") }}'
      roles:
        k8s:
