---

- name: Install haveged if present
  package:
    name: haveged
    state: present

- name: Remove bind9 if present
  failed_when: false
  package:
    name: bind9
    state: absent

- name: Make sure systemd-resolved is NOT running
  systemd:
    state: stopped
    name: systemd-resolved
    enabled: no

- name: "Configure resolv.conf"
  template:
    src: "resolv.conf.j2"
    dest: "/etc/resolv.conf"
    mode: "0644"

- name: Remove dnsmasq
  package:
    name: dnsmasq
    state: absent

- name: create dns directory
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  with_items:
    - '{{ nsd_data }}'
    - '{{ nsd_data }}/conf'
    - '{{ nsd_data }}/zones'
    - '{{ nsd_data }}/db'

- name: Create base nsd configuration file
  template:
    src: nsd.conf.j2
    dest: "{{ nsd_data }}/conf/nsd.conf"
    owner: root
    group: root
    mode: 0644

- name: Create serial, based on UTC UNIX time
  command: date -u +%s
  register: timestamp
  changed_when: false
  run_once: true
  check_mode: false
  tags: bind

- name: Read forward zone hashes
  shell: 'grep -s "^; Hash:" {{ nsd_data }}/zones/db.{{ item.name }} || true'
  changed_when: false
  check_mode: false
  register: forward_hashes_temp
  with_items:
    - "{{ bind_zone_domains }}"

- name: create dict of forward hashes
  set_fact:
    forward_hashes: "{{ forward_hashes|default([]) + [ {'hash': item.stdout|default(), 'name': item.item.name} ] }}"
  with_items:
    - "{{ forward_hashes_temp.results }}"

- name: Master | Create forward lookup zone file
  template:
    src: bind_zone.j2
    dest: "{{ nsd_data }}/zones/db.{{ item.name }}"
    # owner: "{{ bind_owner }}"
    # group: "{{ bind_group }}"
    # mode: "{{ bind_zone_file_mode }}"
    owner: root
    group: root
    mode: 0644
    # validate: 'named-checkzone -d {{ item.name }} %s'
  with_items:
    - "{{ bind_zone_domains }}"

- name: Run hardware/nsd-dnssec
  docker_container:
    name: nsd
    image: hardware/nsd-dnssec
    restart_policy: always
    published_ports:
    - "{{ ansible_all_ipv4_addresses }}:53:53"
    - "{{ ansible_all_ipv4_addresses }}:53:53/udp"
    volumes:
    - '{{ nsd_data }}/conf:/etc/nsd'
    - '{{ nsd_data }}/zones:/zones'
    - '{{ nsd_data }}/db:/var/db/nsd'

- name: Wait until the file nsd_control.pem is present before continuing
  wait_for:
    path: '{{ nsd_data }}/conf/nsd_control.pem'

- name: Wait until the file nsd_server.pem is present before continuing
  wait_for:
    path: '{{ nsd_data }}/conf/nsd_server.pem'

- name: Run docker exec
  shell: "docker container exec nsd keygen {{ item.name }} && docker container exec nsd signzone {{ item.name }}"
  with_items:
    - "{{ bind_zone_domains }}"

- name: /etc/systemd/system/docker.service.d
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: /etc/systemd/system/docker.service.d/override.conf
  copy:
    dest: /etc/systemd/system/docker.service.d/override.conf
    content: |
      [Service]
      ExecStart=
      ExecStart=/usr/bin/dockerd -H fd:// --bip=172.17.0.1/16 --dns=172.17.0.1

- name: Install dnsmasq
  package:
    name: dnsmasq
    state: present

- name: /etc/systemd/system/dnsmasq.service.d
  file:
    path: /etc/systemd/system/dnsmasq.service.d
    state: directory

- name: /etc/systemd/system/dnsmasq.service.d/override.conf
  copy:
    dest: /etc/systemd/system/dnsmasq.service.d/override.conf
    content: |
      [Unit]
      After=docker.service

- name: /etc/dnsmasq.conf
  lineinfile:
    path: /etc/dnsmasq.conf
    line: conf-dir=/etc/dnsmasq.d

- name: /etc/dnsmasq.d
  file:
    path: /etc/dnsmasq.d
    state: directory

- name: /etc/dnsmasq.d/upstream.conf
  copy:
    dest: /etc/dnsmasq.d/upstream.conf
    content: server=8.8.8.8

- name: /etc/dnsmasq.d/local.conf
  notify: Restart
  copy:
    dest: /etc/dnsmasq.d/local.conf
    content: |
      {% for zone in bind_zone_domains %}
      server=/{{ zone.name }}/127.0.0.1#53
      {% endfor %}

- name: Configure /etc/resolv.conf
  copy:
    dest: /etc/resolv.conf
    content: |
      {% for zone in bind_zone_domains %}
      search {{ zone.name }}
      {% endfor %}
      nameserver 127.0.0.1

- name: Restart nsd container
  shell: docker restart nsd
