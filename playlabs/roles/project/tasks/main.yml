---

- name: Pull project image
  tags: update
  docker_image:
    name: '{{ project_image }}'
    force: yes

- name: Get image USER uuid
  shell: docker run {{ project_image }} id -u
  register: project_image_uuid_shell
  changed_when: false

- name: Set project_image_uuid
  set_fact: project_image_uuid={{ project_image_uuid_shell.stdout }}

- name: Docker inspect image
  docker_image_facts:
    name: '{{ project_image }}'
  register: project_image_facts

- set_fact:
    project_image_env: "{{ project_image_facts['images'][0]['Config']['Env']|docker_env_dict }}"

- set_fact:
    project_plugins: "{{ project_image_env.get('PLAYLABS_PLUGINS', '').split(',') }}"
  when: project_plugins == []

- include: vars.yml
  tags: update
- include: home.yml
- include: http.yml
- include: backup.yml
- include: logrotate.yml

- name: Create project network
  docker_network:
    name: '{{ project_instance }}'

- name: Stop container if any
  failed_when: false
  tags: stop
  docker_container:
    name: '{{ project_instance }}'
    state: stopped

- name: Execute backup
  when: project_backup_password != False
  tags: [update, migrate, backup]
  shell: sudo {{ project_home }}/backup.sh

- name: Running deploy.pre.yml for plugins
  with_items: '{{ project_plugins }}'
  include: plugins/{{ item }}/deploy.pre.yml
  tags: predeploy

- include: docker.yml
  tags: deploy

- name: Running deploy.post.yml for plugins
  with_items: '{{ project_plugins }}'
  include: plugins/{{ item }}/deploy.post.yml
  tags: postdeploy

- name: Set test id
  set_fact: test_id={{ ansible_date_time|to_uuid }}
  tags: check,update

- name: Set URL
  set_fact: url='{{ "https" if project_letsencrypt_email else "http" }}://{{ project_dns }}/?test={{ test_id }}'
  tags: check,update

- block:
  - name: Verify URL
    register: url_verify
    retries: 30
    delay: 1
    until: url_verify.status_code < 400
    tags: check,update
    get_url:
      url: '{{ url }}'
      validate_certs: '{{ "yes" if project_letsencrypt_environment == "production" else "no" }}'
      dest: /dev/null

  always:
  - name: nginx-letsencrypt application logs relevant to DNS
    shell: docker logs nginx-letsencrypt | tail -n 10 | grep {{ project_dns }}
    tags: check,update
    changed_when: false
    when: project_letsencrypt_email|default(false)

  - name: nginx-proxy application logs relevant to current deploy
    shell: docker logs nginx-proxy | grep -C1 "{{ test_id }}"
    tags: check,update
    changed_when: false

  - name: project application logs
    shell: docker logs {{ project_instance }} | tail -n 100
    tags: check,update
    changed_when: false
