---
- name: Install pexpect
  when: ansible_os_family != 'Alpine'
  package: name=python3-pexpect

- name: Install pexpect
  when: ansible_os_family == 'Alpine'
  package: name=py3-pexpect

- name: Create super users (don't worry about the failures, it's the way it works for now)
  register: django_createsuperuser
  failed_when: false
  with_items: '{{ users|default([]) }}'
  when: item['name']|vaulted_password(false) and ('superuser' in item.get('roles', {}).get(project_instance, []) or project_instance in item.get('roles', {}).get('superuser', {}))
  expect:
    timeout: 30
    command: docker exec -it {{ project_instance }} django-admin createsuperuser --username {{ item['name'] }} --email {{ item['email'] }}
    responses:
      'Password': ["{{ item['name']|vaulted_password }}", "{{ item['name']|vaulted_password }}"]
      'Bypass': ["y"]

- name: How many users are in the database ?
  tags: users
  shell: docker exec {{ project_instance }} bash -c "echo 'from django.conf import settings; from django.apps import apps; print(apps.get_model(settings.AUTH_USER_MODEL).objects.count())' | django-admin shell"
  register: django_user_count
  changed_when: false
  when: users is not defined or not users

- include: random.yml
  when: not users|default([]) and django_user_count.rc == 0 and django_user_count.stdout == "0"
