---
# Use this playbook first to install python (for ansible) and your user
# (username: $USER) and RSA key ($HOME/.ssh/id_rsa.pub) when you have root ssh
# access.
#
# Once this playbook executed with success, check that you can connect with
# $USER@host and do `sudo -s` without being prompted by a password.
#
# Then you can use other playbooks such as ssh.yml to clean the SSH
# configuration and create other users.

- hosts: all

  # Evite de planter en essayant d'executer le setup module en python avant
  # d'avoir installé python
  gather_facts: False

  tasks:
  # On va essayer d'éviter de toucher si python est déjà là
  - name: Update apt cache
    raw: bash -c 'which python || apt-get update -y'
    register: apt_update
    changed_when: apt_update.stdout_lines != ['/usr/bin/python']

  - name: Install python for ansible
    raw: bash -c 'which python || apt-get install -y python'
    changed_when: apt_update.stdout_lines != ['/usr/bin/python']

- hosts: all
  # On met le sudo sans mot de passe pour le groupe sudo et on créée votre
  # utlisateur-rice et on upload votre clef
  tasks:
  - name: Install sudo
    apt: name=sudo cache_valid_time=3600 state=present

  - name: Passwordless sudo for sudo group
    lineinfile:
      path: /etc/sudoers.d/passwordless
      line: '%sudo ALL=(ALL) NOPASSWD: ALL'
      create: yes
      owner: root
      group: root
      mode: 0600

  - name: Install your admin account
    user:
      name: '{{ lookup("env", "USER") }}'
      state: present
      shell: /bin/bash
      groups: sudo

  - name: Install your ssh key
    authorized_key:
      user: '{{ lookup("env", "USER") }}'
      state: present
      key: '{{ lookup("file", lookup("env", "HOME") + "/.ssh/id_rsa.pub") }}'
